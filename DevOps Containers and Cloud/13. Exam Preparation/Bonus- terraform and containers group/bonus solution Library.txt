Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\Users\NB> docker context ls
NAME                TYPE                DESCRIPTION                               DOCKER ENDPOINT                             KUBERNETES ENDPOINT   ORCHESTRATOR
default *           moby                Current DOCKER_HOST based configuration   npipe:////./pipe/docker_engine
desktop-linux       moby                Docker Desktop                            npipe:////./pipe/dockerDesktopLinuxEngine
PS C:\Users\NB> cd '.\Exam Preparation\'
PS C:\Users\NB\Exam Preparation> cd '.\Bonus- terraform and containers group\'
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> dir


    Directory: C:\Users\NB\Exam Preparation\Bonus- terraform and containers group


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         14-Jun-23     12:13                Library
d-----         14-Jun-23     12:13                Library.Data
-a----         14-Jun-23     12:13            340 .dockerignore
-a----         14-Jun-23     12:13            787 Dockerfile
-a----         09-Jun-23     13:32           1617 Library.sln


PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> docker build -t nikolayx/library .
[+] Building 78.6s (19/19) FINISHED
 => [internal] load .dockerignore                                                                                                                 0.1s
 => => transferring context: 382B                                                                                                                 0.0s
 => [internal] load build definition from Dockerfile                                                                                              0.1s
 => => transferring dockerfile: 826B                                                                                                              0.0s
 => [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:6.0                                                                              0.0s
 => [internal] load metadata for mcr.microsoft.com/dotnet/sdk:6.0                                                                                 0.6s
 => [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:6.0                                                                                           0.0s
 => [build 1/8] FROM mcr.microsoft.com/dotnet/sdk:6.0@sha256:a3bbff689a86ba7f3ddcee5089a729b20e20e3b4dbfb9d0a43bb3284d9081023                     0.0s
 => [internal] load build context                                                                                                                 1.0s
 => => transferring context: 8.23MB                                                                                                               1.0s
 => CACHED [build 2/8] WORKDIR /src                                                                                                               0.0s
 => CACHED [build 3/8] COPY [Library/Library.csproj, Library/]                                                                                    0.0s
 => CACHED [build 4/8] COPY [Library.Data/Library.Data.csproj, Library.Data/]                                                                     0.0s
 => CACHED [build 5/8] RUN dotnet restore "Library/Library.csproj"                                                                                0.0s
 => [build 6/8] COPY . .                                                                                                                          1.7s
 => [build 7/8] WORKDIR /src/Library                                                                                                              0.2s
 => [build 8/8] RUN dotnet build "Library.csproj" -c Release -o /app/build                                                                       36.4s
 => [publish 1/1] RUN dotnet publish "Library.csproj" -c Release -o /app/publish /p:UseAppHost=false                                             30.9s
 => CACHED [base 2/2] WORKDIR /app                                                                                                                0.0s
 => CACHED [final 1/2] WORKDIR /app                                                                                                               0.0s
 => [final 2/2] COPY --from=publish /app/publish .                                                                                                6.6s
 => exporting to image                                                                                                                            0.6s
 => => exporting layers                                                                                                                           0.5s
 => => writing image sha256:81f4fd66e3f4b6660dc0283dc8a3f942e613cf473fde11500217b3b8501c63c4                                                      0.0s
 => => naming to docker.io/nikolayx/library                                                                                                       0.0s
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> docker push nikolayx/library
Using default tag: latest
The push refers to repository [docker.io/nikolayx/library]
18ad4bce0116: Pushed
5f70bf18a086: Mounted from nikolayx/taskboard_app
7accb6a3c5fe: Pushed
87edbcd48e4d: Mounted from nikolayx/taskboard_app
4cf15d404e20: Mounted from nikolayx/taskboard_app
847d60aa4ab2: Mounted from nikolayx/taskboard_app
b681f1ff1a0f: Mounted from nikolayx/taskboard_app
8cbe4b54fa88: Mounted from nikolayx/taskboard_app
latest: digest: sha256:17ca025bdbdb0e2afed9d00ba75a5191c0c819e1999f74081db786faa3e43160 size: 1996
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> dir


    Directory: C:\Users\NB\Exam Preparation\Bonus- terraform and containers group


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         14-Jun-23     12:13                Library
d-----         14-Jun-23     12:13                Library.Data
-a----         14-Jun-23     12:13            340 .dockerignore
-a----         14-Jun-23     12:13            787 Dockerfile
-a----         09-Jun-23     13:32           1617 Library.sln
-a----         14-Jun-23     12:32           2002 main.tf


PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> terraform init

Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/azurerm versions matching ">= 3.59.0"...
- Installing hashicorp/azurerm v3.61.0...
- Installed hashicorp/azurerm v3.61.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> terraform fmt
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> terraform validate
Success! The configuration is valid.

PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_container_group.example will be created
  + resource "azurerm_container_group" "example" {
      + dns_name_label              = "library-nb"
      + dns_name_label_reuse_policy = "Unsecure"
      + exposed_port                = (known after apply)
      + fqdn                        = (known after apply)
      + id                          = (known after apply)
      + ip_address                  = (known after apply)
      + ip_address_type             = "Public"
      + location                    = "westeurope"
      + name                        = "Library"
      + network_profile_id          = (known after apply)
      + os_type                     = "Linux"
      + resource_group_name         = "LibraryRG"
      + restart_policy              = "Always"

      + container {
          + commands = (known after apply)
          + cpu      = 1
          + image    = "nikolayx/library"
          + memory   = 1.5
          + name     = "web-app"

          + ports {
              + port     = 80
              + protocol = "TCP"
            }
        }
      + container {
          + commands              = (known after apply)
          + cpu                   = 2
          + environment_variables = {
              + "ACCEPT_EULA"       = "Y"
              + "MSSQL_SA_PASSWORD" = "yourStrongPassword12#"
            }
          + image                 = "mcr.microsoft.com/mssql/server"
          + memory                = 2
          + name                  = "sqlserver"

          + ports {
              + port     = 1433
              + protocol = "TCP"
            }

          + volume {
              + empty_dir            = false
              + mount_path           = "/var/opt/mssql"
              + name                 = "database-storage-nb"
              + read_only            = false
              + share_name           = "librarynb-share"
              + storage_account_key  = (sensitive value)
              + storage_account_name = "librarynb"
            }
        }
    }

  # azurerm_resource_group.example will be created
  + resource "azurerm_resource_group" "example" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "LibraryRG"
    }

  # azurerm_storage_account.example will be created
  + resource "azurerm_storage_account" "example" {
      + access_tier                       = (known after apply)
      + account_kind                      = "StorageV2"
      + account_replication_type          = "LRS"
      + account_tier                      = "Standard"
      + allow_nested_items_to_be_public   = true
      + cross_tenant_replication_enabled  = true
      + default_to_oauth_authentication   = false
      + enable_https_traffic_only         = true
      + id                                = (known after apply)
      + infrastructure_encryption_enabled = false
      + is_hns_enabled                    = false
      + large_file_share_enabled          = (known after apply)
      + location                          = "westeurope"
      + min_tls_version                   = "TLS1_2"
      + name                              = "librarynb"
      + nfsv3_enabled                     = false
      + primary_access_key                = (sensitive value)
      + primary_blob_connection_string    = (sensitive value)
      + primary_blob_endpoint             = (known after apply)
      + primary_blob_host                 = (known after apply)
      + primary_connection_string         = (sensitive value)
      + primary_dfs_endpoint              = (known after apply)
      + primary_dfs_host                  = (known after apply)
      + primary_file_endpoint             = (known after apply)
      + primary_file_host                 = (known after apply)
      + primary_location                  = (known after apply)
      + primary_queue_endpoint            = (known after apply)
      + primary_queue_host                = (known after apply)
      + primary_table_endpoint            = (known after apply)
      + primary_table_host                = (known after apply)
      + primary_web_endpoint              = (known after apply)
      + primary_web_host                  = (known after apply)
      + public_network_access_enabled     = true
      + queue_encryption_key_type         = "Service"
      + resource_group_name               = "LibraryRG"
      + secondary_access_key              = (sensitive value)
      + secondary_blob_connection_string  = (sensitive value)
      + secondary_blob_endpoint           = (known after apply)
      + secondary_blob_host               = (known after apply)
      + secondary_connection_string       = (sensitive value)
      + secondary_dfs_endpoint            = (known after apply)
      + secondary_dfs_host                = (known after apply)
      + secondary_file_endpoint           = (known after apply)
      + secondary_file_host               = (known after apply)
      + secondary_location                = (known after apply)
      + secondary_queue_endpoint          = (known after apply)
      + secondary_queue_host              = (known after apply)
      + secondary_table_endpoint          = (known after apply)
      + secondary_table_host              = (known after apply)                                                                                              + secondary_web_endpoint            = (known after apply)                                                                                              + secondary_web_host                = (known after apply)                                                                                              + sftp_enabled                      = false                                                                                                            + shared_access_key_enabled         = true                                                                                                             + table_encryption_key_type         = "Service"                                                                                                      }

  # azurerm_storage_share.example will be created
  + resource "azurerm_storage_share" "example" {                                                                                                             + access_tier          = (known after apply)                                                                                                           + enabled_protocol     = "SMB"                                                                                                                         + id                   = (known after apply)                                                                                                           + metadata             = (known after apply)                                                                                                           + name                 = "librarynb-share"                                                                                                             + quota                = 50                                                                                                                            + resource_manager_id  = (known after apply)                                                                                                           + storage_account_name = "librarynb"                                                                                                                   + url                  = (known after apply)                                                                                                         }                                                                                                                                                                                                                                                                                                         Plan: 4 to add, 0 to change, 0 to destroy.                                                                                                                                                                                                                                                                    Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.example: Creating...                                                                                                            azurerm_resource_group.example: Creation complete after 2s [id=/subscriptions/56f5a8d7-2b04-4e50-80ad-0d999a5a881a/resourceGroups/LibraryRG]           azurerm_storage_account.example: Creating...                                                                                                           azurerm_storage_account.example: Still creating... [10s elapsed]                                                                                       azurerm_storage_account.example: Still creating... [20s elapsed]                                                                                       azurerm_storage_account.example: Creation complete after 25s [id=/subscriptions/56f5a8d7-2b04-4e50-80ad-0d999a5a881a/resourceGroups/LibraryRG/providers/Microsoft.Storage/storageAccounts/librarynb]                                                                                                          azurerm_storage_share.example: Creating...                                                                                                             azurerm_storage_share.example: Creation complete after 1s [id=https://librarynb.file.core.windows.net/librarynb-share]                                 azurerm_container_group.example: Creating...                                                                                                           azurerm_container_group.example: Still creating... [10s elapsed]                                                                                       azurerm_container_group.example: Still creating... [20s elapsed]                                                                                       azurerm_container_group.example: Still creating... [30s elapsed]                                                                                       azurerm_container_group.example: Still creating... [40s elapsed]                                                                                       azurerm_container_group.example: Still creating... [50s elapsed]                                                                                       azurerm_container_group.example: Still creating... [1m0s elapsed]                                                                                      azurerm_container_group.example: Still creating... [1m10s elapsed]                                                                                     azurerm_container_group.example: Still creating... [1m20s elapsed]                                                                                     azurerm_container_group.example: Still creating... [1m30s elapsed]                                                                                     azurerm_container_group.example: Still creating... [1m40s elapsed]                                                                                     azurerm_container_group.example: Still creating... [1m50s elapsed]                                                                                     azurerm_container_group.example: Still creating... [2m0s elapsed]                                                                                      azurerm_container_group.example: Still creating... [2m10s elapsed]                                                                                     azurerm_container_group.example: Creation complete after 2m11s [id=/subscriptions/56f5a8d7-2b04-4e50-80ad-0d999a5a881a/resourceGroups/LibraryRG/providers/Microsoft.ContainerInstance/containerGroups/Library]

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.
PS C:\Users\NB\Exam Preparation\Bonus- terraform and containers group> $connectTestResult = Test-NetConnection -ComputerName librarynb.file.core.windows.net -Port 445
>> if ($connectTestResult.TcpTestSucceeded) {
>>     # Save the password so the drive will persist on reboot
>>     cmd.exe /C "cmdkey /add:`"librarynb.file.core.windows.net`" /user:`"localhost\librarynb`" /pass:`"JJcaxGKGnXlT1E5ALP9s6S83UHs8Gtst35mRrUyiMrfRk4Sba/9axC+vZPjaw49W2qQtfGXj5vXJ+AStsYpctA==`""
>>     # Mount the drive
>>     New-PSDrive -Name Z -PSProvider FileSystem -Root "\\librarynb.file.core.windows.net\librarynb-share" -Persist
>> } else {
>>     Write-Error -Message "Unable to reach the Azure storage account via port 445. Check to make sure your organization or ISP is not blocking port 445, or use Azure P2S VPN, Azure S2S VPN, or Express Route to tunnel SMB traffic over a different port."
>> }
WARNING: TCP connect to (20.60.197.72 : 445) failed
WARNING: Ping to 20.60.197.72 failed with status: DestinationHostUnreachable
$connectTestResult = Test-NetConnection -ComputerName librarynb.file.core.windows.net -Port 445
if ($connectTestResult.TcpTestSucceeded) {
    # Save the password so the drive will persist on reboot
    cmd.exe /C "cmdkey /add:`"librarynb.file.core.windows.net`" /user:`"localhost\librarynb`"
/pass:`"JJcaxGKGnXlT1E5ALP9s6S83UHs8Gtst35mRrUyiMrfRk4Sba/9axC+vZPjaw49W2qQtfGXj5vXJ+AStsYpctA==`""
    # Mount the drive
    New-PSDrive -Name Z -PSProvider FileSystem -Root "\\librarynb.file.core.windows.net\librarynb-share" -Persist
} else {
    Write-Error -Message "Unable to reach the Azure storage account via port 445. Check to make sure your organization or ISP is not blocking port
445, or use Azure P2S VPN, Azure S2S VPN, or Express Route to tunnel SMB traffic over a different port."
} : Unable to reach the Azure storage account via port 445. Check to make sure your organization or ISP is not blocking port 445, or use Azure P2S
VPN, Azure S2S VPN, or Express Route to tunnel SMB traffic over a different port.
    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException