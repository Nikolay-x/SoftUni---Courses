PS C:\Users\NB\Kubernetes\Core Concepts> kubectl api-resources
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v2                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta3   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta3   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1                      true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl api-versions
admissionregistration.k8s.io/v1
apiextensions.k8s.io/v1
apiregistration.k8s.io/v1
apps/v1
authentication.k8s.io/v1
authorization.k8s.io/v1
autoscaling/v1
autoscaling/v2
batch/v1
certificates.k8s.io/v1
coordination.k8s.io/v1
discovery.k8s.io/v1
events.k8s.io/v1
flowcontrol.apiserver.k8s.io/v1beta2
flowcontrol.apiserver.k8s.io/v1beta3
networking.k8s.io/v1
node.k8s.io/v1
policy/v1
rbac.authorization.k8s.io/v1
scheduling.k8s.io/v1
storage.k8s.io/v1
v1
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl explain pod
KIND:     Pod
VERSION:  v1

DESCRIPTION:
     Pod is a collection of containers that can run on a host. This resource is
     created by clients and scheduled onto hosts.

FIELDS:
   apiVersion   <string>
     APIVersion defines the versioned schema of this representation of an
     object. Servers should convert recognized schemas to the latest internal
     value, and may reject unrecognized values. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources

   kind <string>
     Kind is a string value representing the REST resource this object
     represents. Servers may infer this from the endpoint the client submits
     requests to. Cannot be updated. In CamelCase. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds

   metadata     <Object>
     Standard object's metadata. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

   spec <Object>
     Specification of the desired behavior of the pod. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

   status       <Object>
     Most recently observed status of the pod. This data may not be up to date.
     Populated by the system. Read-only. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

PS C:\Users\NB\Kubernetes\Core Concepts> kubectl explain pod.spec
KIND:     Pod
VERSION:  v1

RESOURCE: spec <Object>

DESCRIPTION:
     Specification of the desired behavior of the pod. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

     PodSpec is a description of a pod.

FIELDS:
   activeDeadlineSeconds        <integer>
     Optional duration in seconds the pod may be active on the node relative to
     StartTime before the system will actively try to mark it failed and kill
     associated containers. Value must be a positive integer.

   affinity     <Object>
     If specified, the pod's scheduling constraints

   automountServiceAccountToken <boolean>
     AutomountServiceAccountToken indicates whether a service account token
     should be automatically mounted.

   containers   <[]Object> -required-
     List of containers belonging to the pod. Containers cannot currently be
     added or removed. There must be at least one container in a Pod. Cannot be
     updated.

   dnsConfig    <Object>
     Specifies the DNS parameters of a pod. Parameters specified here will be
     merged to the generated DNS configuration based on DNSPolicy.

   dnsPolicy    <string>
     Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
     'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS
     parameters given in DNSConfig will be merged with the policy selected with
     DNSPolicy. To have DNS options set along with hostNetwork, you have to
     specify DNS policy explicitly to 'ClusterFirstWithHostNet'.

     Possible enum values:
     - `"ClusterFirst"` indicates that the pod should use cluster DNS first
     unless hostNetwork is true, if it is available, then fall back on the
     default (as determined by kubelet) DNS settings.
     - `"ClusterFirstWithHostNet"` indicates that the pod should use cluster DNS
     first, if it is available, then fall back on the default (as determined by
     kubelet) DNS settings.
     - `"Default"` indicates that the pod should use the default (as determined
     by kubelet) DNS settings.
     - `"None"` indicates that the pod should use empty DNS settings. DNS
     parameters such as nameservers and search paths should be defined via
     DNSConfig.

   enableServiceLinks   <boolean>
     EnableServiceLinks indicates whether information about services should be
     injected into pod's environment variables, matching the syntax of Docker
     links. Optional: Defaults to true.

   ephemeralContainers  <[]Object>
     List of ephemeral containers run in this pod. Ephemeral containers may be
     run in an existing pod to perform user-initiated actions such as debugging.
     This list cannot be specified when creating a pod, and it cannot be
     modified by updating the pod spec. In order to add an ephemeral container
     to an existing pod, use the pod's ephemeralcontainers subresource.

   hostAliases  <[]Object>
     HostAliases is an optional list of hosts and IPs that will be injected into
     the pod's hosts file if specified. This is only valid for non-hostNetwork
     pods.

   hostIPC      <boolean>
     Use the host's ipc namespace. Optional: Default to false.

   hostNetwork  <boolean>
     Host networking requested for this pod. Use the host's network namespace.
     If this option is set, the ports that will be used must be specified.
     Default to false.

   hostPID      <boolean>
     Use the host's pid namespace. Optional: Default to false.

   hostUsers    <boolean>
     Use the host's user namespace. Optional: Default to true. If set to true or
     not present, the pod will be run in the host user namespace, useful for
     when the pod needs a feature only available to the host user namespace,
     such as loading a kernel module with CAP_SYS_MODULE. When set to false, a
     new userns is created for the pod. Setting false is useful for mitigating
     container breakout vulnerabilities even allowing users to run their
     containers as root without actually having root privileges on the host.
     This field is alpha-level and is only honored by servers that enable the
     UserNamespacesSupport feature.

   hostname     <string>
     Specifies the hostname of the Pod If not specified, the pod's hostname will
     be set to a system-defined value.

   imagePullSecrets     <[]Object>
     ImagePullSecrets is an optional list of references to secrets in the same
     namespace to use for pulling any of the images used by this PodSpec. If
     specified, these secrets will be passed to individual puller
     implementations for them to use. More info:
     https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod

   initContainers       <[]Object>
     List of initialization containers belonging to the pod. Init containers are
     executed in order prior to containers being started. If any init container
     fails, the pod is considered to have failed and is handled according to its
     restartPolicy. The name for an init container or normal container must be
     unique among all containers. Init containers may not have Lifecycle
     actions, Readiness probes, Liveness probes, or Startup probes. The
     resourceRequirements of an init container are taken into account during
     scheduling by finding the highest request/limit for each resource type, and
     then using the max of of that value or the sum of the normal containers.
     Limits are applied to init containers in a similar fashion. Init containers
     cannot currently be added or removed. Cannot be updated. More info:
     https://kubernetes.io/docs/concepts/workloads/pods/init-containers/

   nodeName     <string>
     NodeName is a request to schedule this pod onto a specific node. If it is
     non-empty, the scheduler simply schedules this pod onto that node, assuming
     that it fits resource requirements.

   nodeSelector <map[string]string>
     NodeSelector is a selector which must be true for the pod to fit on a node.
     Selector which must match a node's labels for the pod to be scheduled on
     that node. More info:
     https://kubernetes.io/docs/concepts/configuration/assign-pod-node/

   os   <Object>
     Specifies the OS of the containers in the pod. Some pod and container
     fields are restricted if this is set.

     If the OS field is set to linux, the following fields must be unset:
     -securityContext.windowsOptions

     If the OS field is set to windows, following fields must be unset: -
     spec.hostPID - spec.hostIPC - spec.hostUsers -
     spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile -
     spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy -
     spec.securityContext.sysctls - spec.shareProcessNamespace -
     spec.securityContext.runAsUser - spec.securityContext.runAsGroup -
     spec.securityContext.supplementalGroups -
     spec.containers[*].securityContext.seLinuxOptions -
     spec.containers[*].securityContext.seccompProfile -
     spec.containers[*].securityContext.capabilities -
     spec.containers[*].securityContext.readOnlyRootFilesystem -
     spec.containers[*].securityContext.privileged -
     spec.containers[*].securityContext.allowPrivilegeEscalation -
     spec.containers[*].securityContext.procMount -
     spec.containers[*].securityContext.runAsUser -
     spec.containers[*].securityContext.runAsGroup

   overhead     <map[string]string>
     Overhead represents the resource overhead associated with running a pod for
     a given RuntimeClass. This field will be autopopulated at admission time by
     the RuntimeClass admission controller. If the RuntimeClass admission
     controller is enabled, overhead must not be set in Pod create requests. The
     RuntimeClass admission controller will reject Pod create requests which
     have the overhead already set. If RuntimeClass is configured and selected
     in the PodSpec, Overhead will be set to the value defined in the
     corresponding RuntimeClass, otherwise it will remain unset and treated as
     zero. More info:
     https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md

   preemptionPolicy     <string>
     PreemptionPolicy is the Policy for preempting pods with lower priority. One
     of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.

     Possible enum values:
     - `"Never"` means that pod never preempts other pods with lower priority.
     - `"PreemptLowerPriority"` means that pod can preempt other pods with lower
     priority.

   priority     <integer>
     The priority value. Various system components use this field to find the
     priority of the pod. When Priority Admission Controller is enabled, it
     prevents users from setting this field. The admission controller populates
     this field from PriorityClassName. The higher the value, the higher the
     priority.

   priorityClassName    <string>
     If specified, indicates the pod's priority. "system-node-critical" and
     "system-cluster-critical" are two special keywords which indicate the
     highest priorities with the former being the highest priority. Any other
     name must be defined by creating a PriorityClass object with that name. If
     not specified, the pod priority will be default or zero if there is no
     default.

   readinessGates       <[]Object>
     If specified, all readiness gates will be evaluated for pod readiness. A
     pod is ready when all its containers are ready AND all conditions specified
     in the readiness gates have status equal to "True" More info:
     https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates

   resourceClaims       <[]Object>
     ResourceClaims defines which ResourceClaims must be allocated and reserved
     before the Pod is allowed to start. The resources will be made available to
     those containers which consume them by name.

     This is an alpha field and requires enabling the DynamicResourceAllocation
     feature gate.

     This field is immutable.

   restartPolicy        <string>
     Restart policy for all containers within the pod. One of Always, OnFailure,
     Never. In some contexts, only a subset of those values may be permitted.
     Default to Always. More info:
     https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy

     Possible enum values:
     - `"Always"`
     - `"Never"`
     - `"OnFailure"`

   runtimeClassName     <string>
     RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group,
     which should be used to run this pod. If no RuntimeClass resource matches
     the named class, the pod will not be run. If unset or empty, the "legacy"
     RuntimeClass will be used, which is an implicit class with an empty
     definition that uses the default runtime handler. More info:
     https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class

   schedulerName        <string>
     If specified, the pod will be dispatched by specified scheduler. If not
     specified, the pod will be dispatched by default scheduler.

   schedulingGates      <[]Object>
     SchedulingGates is an opaque list of values that if specified will block
     scheduling the pod. If schedulingGates is not empty, the pod will stay in
     the SchedulingGated state and the scheduler will not attempt to schedule
     the pod.

     SchedulingGates can only be set at pod creation time, and be removed only
     afterwards.

     This is a beta feature enabled by the PodSchedulingReadiness feature gate.

   securityContext      <Object>
     SecurityContext holds pod-level security attributes and common container
     settings. Optional: Defaults to empty. See type description for default
     values of each field.

   serviceAccount       <string>
     DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
     Deprecated: Use serviceAccountName instead.

   serviceAccountName   <string>
     ServiceAccountName is the name of the ServiceAccount to use to run this
     pod. More info:
     https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/

   setHostnameAsFQDN    <boolean>
     If true the pod's hostname will be configured as the pod's FQDN, rather
     than the leaf name (the default). In Linux containers, this means setting
     the FQDN in the hostname field of the kernel (the nodename field of struct
     utsname). In Windows containers, this means setting the registry value of
     hostname for the registry key
     HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters to
     FQDN. If a pod does not have FQDN, this has no effect. Default to false.

   shareProcessNamespace        <boolean>
     Share a single process namespace between all of the containers in a pod.
     When this is set containers will be able to view and signal processes from
     other containers in the same pod, and the first process in each container
     will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both
     be set. Optional: Default to false.

   subdomain    <string>
     If specified, the fully qualified Pod hostname will be
     "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not
     specified, the pod will not have a domainname at all.

   terminationGracePeriodSeconds        <integer>
     Optional duration in seconds the pod needs to terminate gracefully. May be
     decreased in delete request. Value must be non-negative integer. The value
     zero indicates stop immediately via the kill signal (no opportunity to shut
     down). If this value is nil, the default grace period will be used instead.
     The grace period is the duration in seconds after the processes running in
     the pod are sent a termination signal and the time when the processes are
     forcibly halted with a kill signal. Set this value longer than the expected
     cleanup time for your process. Defaults to 30 seconds.

   tolerations  <[]Object>
     If specified, the pod's tolerations.

   topologySpreadConstraints    <[]Object>
     TopologySpreadConstraints describes how a group of pods ought to spread
     across topology domains. Scheduler will schedule pods in a way which abides
     by the constraints. All topologySpreadConstraints are ANDed.

   volumes      <[]Object>
     List of volumes that can be mounted by containers belonging to the pod.
     More info: https://kubernetes.io/docs/concepts/storage/volumes

PS C:\Users\NB\Kubernetes\Core Concepts> kubectl explain pod.spec | find.exe /I `"required`"
   containers   <[]Object> -required-
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl explain pod.spec.containers
KIND:     Pod
VERSION:  v1

RESOURCE: containers <[]Object>

DESCRIPTION:
     List of containers belonging to the pod. Containers cannot currently be
     added or removed. There must be at least one container in a Pod. Cannot be
     updated.

     A single application container that you want to run within a pod.

FIELDS:
   args <[]string>
     Arguments to the entrypoint. The container image's CMD is used if this is
     not provided. Variable references $(VAR_NAME) are expanded using the
     container's environment. If a variable cannot be resolved, the reference in
     the input string will be unchanged. Double $$ are reduced to a single $,
     which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
     produce the string literal "$(VAR_NAME)". Escaped references will never be
     expanded, regardless of whether the variable exists or not. Cannot be
     updated. More info:
     https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell

   command      <[]string>
     Entrypoint array. Not executed within a shell. The container image's
     ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)
     are expanded using the container's environment. If a variable cannot be
     resolved, the reference in the input string will be unchanged. Double $$
     are reduced to a single $, which allows for escaping the $(VAR_NAME)
     syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
     Escaped references will never be expanded, regardless of whether the
     variable exists or not. Cannot be updated. More info:
     https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell

   env  <[]Object>
     List of environment variables to set in the container. Cannot be updated.

   envFrom      <[]Object>
     List of sources to populate environment variables in the container. The
     keys defined within a source must be a C_IDENTIFIER. All invalid keys will
     be reported as an event when the container is starting. When a key exists
     in multiple sources, the value associated with the last source will take
     precedence. Values defined by an Env with a duplicate key will take
     precedence. Cannot be updated.

   image        <string>
     Container image name. More info:
     https://kubernetes.io/docs/concepts/containers/images This field is
     optional to allow higher level config management to default or override
     container images in workload controllers like Deployments and StatefulSets.

   imagePullPolicy      <string>
     Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always
     if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
     More info:
     https://kubernetes.io/docs/concepts/containers/images#updating-images

     Possible enum values:
     - `"Always"` means that kubelet always attempts to pull the latest image.
     Container will fail If the pull fails.
     - `"IfNotPresent"` means that kubelet pulls if the image isn't present on
     disk. Container will fail if the image isn't present and the pull fails.
     - `"Never"` means that kubelet never pulls an image, but only uses a local
     image. Container will fail if the image isn't present

   lifecycle    <Object>
     Actions that the management system should take in response to container
     lifecycle events. Cannot be updated.

   livenessProbe        <Object>
     Periodic probe of container liveness. Container will be restarted if the
     probe fails. Cannot be updated. More info:
     https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

   name <string> -required-
     Name of the container specified as a DNS_LABEL. Each container in a pod
     must have a unique name (DNS_LABEL). Cannot be updated.

   ports        <[]Object>
     List of ports to expose from the container. Not specifying a port here DOES
     NOT prevent that port from being exposed. Any port which is listening on
     the default "0.0.0.0" address inside a container will be accessible from
     the network. Modifying this array with strategic merge patch may corrupt
     the data. For more information See
     https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.

   readinessProbe       <Object>
     Periodic probe of container service readiness. Container will be removed
     from service endpoints if the probe fails. Cannot be updated. More info:
     https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

   resizePolicy <[]Object>
     Resources resize policy for the container.

   resources    <Object>
     Compute Resources required by this container. Cannot be updated. More info:
     https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

   securityContext      <Object>
     SecurityContext defines the security options the container should be run
     with. If set, the fields of SecurityContext override the equivalent fields
     of PodSecurityContext. More info:
     https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

   startupProbe <Object>
     StartupProbe indicates that the Pod has successfully initialized. If
     specified, no other probes are executed until this completes successfully.
     If this probe fails, the Pod will be restarted, just as if the
     livenessProbe failed. This can be used to provide different probe
     parameters at the beginning of a Pod's lifecycle, when it might take a long
     time to load data or warm a cache, than during steady-state operation. This
     cannot be updated. More info:
     https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

   stdin        <boolean>
     Whether this container should allocate a buffer for stdin in the container
     runtime. If this is not set, reads from stdin in the container will always
     result in EOF. Default is false.

   stdinOnce    <boolean>
     Whether the container runtime should close the stdin channel after it has
     been opened by a single attach. When stdin is true the stdin stream will
     remain open across multiple attach sessions. If stdinOnce is set to true,
     stdin is opened on container start, is empty until the first client
     attaches to stdin, and then remains open and accepts data until the client
     disconnects, at which time stdin is closed and remains closed until the
     container is restarted. If this flag is false, a container processes that
     reads from stdin will never receive an EOF. Default is false

   terminationMessagePath       <string>
     Optional: Path at which the file to which the container's termination
     message will be written is mounted into the container's filesystem. Message
     written is intended to be brief final status, such as an assertion failure
     message. Will be truncated by the node if greater than 4096 bytes. The
     total message length across all containers will be limited to 12kb.
     Defaults to /dev/termination-log. Cannot be updated.

   terminationMessagePolicy     <string>
     Indicate how the termination message should be populated. File will use the
     contents of terminationMessagePath to populate the container status message
     on both success and failure. FallbackToLogsOnError will use the last chunk
     of container log output if the termination message file is empty and the
     container exited with an error. The log output is limited to 2048 bytes or
     80 lines, whichever is smaller. Defaults to File. Cannot be updated.

     Possible enum values:
     - `"FallbackToLogsOnError"` will read the most recent contents of the
     container logs for the container status message when the container exits
     with an error and the terminationMessagePath has no contents.
     - `"File"` is the default behavior and will set the container status
     message to the contents of the container's terminationMessagePath when the
     container exits.

   tty  <boolean>
     Whether this container should allocate a TTY for itself, also requires
     'stdin' to be true. Default is false.

   volumeDevices        <[]Object>
     volumeDevices is the list of block devices to be used by the container.

   volumeMounts <[]Object>
     Pod volumes to mount into the container's filesystem. Cannot be updated.

   workingDir   <string>
     Container's working directory. If not specified, the container runtime's
     default will be used, which might be configured in the container image.
     Cannot be updated.

PS C:\Users\NB\Kubernetes\Core Concepts> kubectl explain pod.spec.containers | find.exe /I `"required`"
   name <string> -required-
     Compute Resources required by this container. Cannot be updated. More info:
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl create namespace ns1
namespace/ns1 created
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl get namespaces
NAME              STATUS   AGE
default           Active   43m
kube-node-lease   Active   43m
kube-public       Active   43m
kube-system       Active   43m
ns1               Active   12s
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl create --help
Create a resource from a file or from stdin.

 JSON and YAML formats are accepted.

Examples:
  # Create a pod using the data in pod.json
  kubectl create -f ./pod.json

  # Create a pod based on the JSON passed into stdin
  cat pod.json | kubectl create -f -

  # Edit the data in registry.yaml in JSON then create the resource using the edited data
  kubectl create -f registry.yaml --edit -o json

Available Commands:
  clusterrole           Create a cluster role
  clusterrolebinding    Create a cluster role binding for a particular cluster role
  configmap             Create a config map from a local file, directory or literal value
  cronjob               Create a cron job with the specified name
  deployment            Create a deployment with the specified name
  ingress               Create an ingress with the specified name
  job                   Create a job with the specified name
  namespace             Create a namespace with the specified name
  poddisruptionbudget   Create a pod disruption budget with the specified name
  priorityclass         Create a priority class with the specified name
  quota                 Create a quota with the specified name
  role                  Create a role with single rule
  rolebinding           Create a role binding for a particular role or cluster role
  secret                Create a secret using specified subcommand
  service               Create a service using a specified subcommand
  serviceaccount        Create a service account with the specified name
  token                 Request a service account token

Options:
    --allow-missing-template-keys=true:
        If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to
        golang and jsonpath output formats.

    --dry-run='none':
        Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without
        sending it. If server strategy, submit server-side request without persisting the resource.

    --edit=false:
        Edit the API resource before creating

    --field-manager='kubectl-create':
        Name of the manager used to track field ownership.

    -f, --filename=[]:
        Filename, directory, or URL to files to use to create the resource

    -k, --kustomize='':
        Process the kustomization directory. This flag can't be used together with -f or -R.

    -o, --output='':
        Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath,
        jsonpath-as-json, jsonpath-file).

    --raw='':
        Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.

    -R, --recursive=false:
        Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests
        organized within the same directory.

    --save-config=false:
        If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will
        be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.

    -l, --selector='':
        Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2). Matching
        objects must satisfy all of the specified label constraints.

    --show-managed-fields=false:
        If true, keep the managedFields when printing objects in JSON or YAML format.

    --template='':
        Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format
        is golang templates [http://golang.org/pkg/text/template/#pkg-overview].

    --validate='strict':
        Must be one of: strict (or true), warn, ignore (or false).              "true" or "strict" will use a schema to validate
        the input and fail the request if invalid. It will perform server side validation if ServerSideFieldValidation
        is enabled on the api-server, but will fall back to less reliable client-side validation if not.
        "warn" will
        warn about unknown or duplicate fields without blocking the request if server-side field validation is enabled
        on the API server, and behave as "ignore" otherwise.            "false" or "ignore" will not perform any schema
        validation, silently dropping any unknown or duplicate fields.

    --windows-line-endings=true:
        Only relevant if --edit=true. Defaults to the line ending native to your platform.

Usage:
  kubectl create -f FILENAME [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl create namespace ns2 --dry-run=client --output=yaml
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: ns2
spec: {}
status: {}
PS C:\Users\NB\Kubernetes\Core Concepts> cd..
PS C:\Users\NB\Kubernetes> cd '.\02. Core Concepts\'
PS C:\Users\NB\Kubernetes\02. Core Concepts> cd .\m1\
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl create namespace ns2 --dry-run=client --output=yaml > ns2.yaml
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl create -f ns2.yaml
namespace/ns2 created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get namespaces
NAME              STATUS   AGE
default           Active   53m
kube-node-lease   Active   53m
kube-public       Active   53m
kube-system       Active   53m
ns1               Active   9m49s
ns2               Active   15s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete namespaces ns2
namespace "ns2" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get namespaces
NAME              STATUS   AGE
default           Active   54m
kube-node-lease   Active   54m
kube-public       Active   54m
kube-system       Active   54m
ns1               Active   10m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl create -f ns2.yaml
namespace/ns2 created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get namespaces
NAME              STATUS   AGE
default           Active   54m
kube-node-lease   Active   54m
kube-public       Active   54m
kube-system       Active   54m
ns1               Active   11m
ns2               Active   3s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete -f ns2.yaml
namespace "ns2" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get namespaces
NAME              STATUS   AGE
default           Active   55m
kube-node-lease   Active   55m
kube-public       Active   55m
kube-system       Active   55m
ns1               Active   11m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
No resources found in default namespace.
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get ns
NAME              STATUS   AGE
default           Active   59m
kube-node-lease   Active   59m
kube-public       Active   59m
kube-system       Active   59m
ns1               Active   16m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods --all-namespaces
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-5d78c9869d-p54nh           1/1     Running   0          61m
kube-system   etcd-minikube                      1/1     Running   0          61m
kube-system   kube-apiserver-minikube            1/1     Running   0          61m
kube-system   kube-controller-manager-minikube   1/1     Running   0          61m
kube-system   kube-proxy-m5n57                   1/1     Running   0          61m
kube-system   kube-scheduler-minikube            1/1     Running   0          61m
kube-system   storage-provisioner                1/1     Running   0          61m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -A
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-5d78c9869d-p54nh           1/1     Running   0          61m
kube-system   etcd-minikube                      1/1     Running   0          61m
kube-system   kube-apiserver-minikube            1/1     Running   0          61m
kube-system   kube-controller-manager-minikube   1/1     Running   0          61m
kube-system   kube-proxy-m5n57                   1/1     Running   0          61m
kube-system   kube-scheduler-minikube            1/1     Running   0          61m
kube-system   storage-provisioner                1/1     Running   0          61m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run nginx-pod --image nginx
pod/nginx-pod created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME        READY   STATUS              RESTARTS   AGE
nginx-pod   0/1     ContainerCreating   0          16s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          41s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete pod nginx-pod
pod "nginx-pod" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
No resources found in default namespace.
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run nginx-pod --image nginx -n ns1
pod/nginx-pod created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run --help
Create and run a particular image in a pod.

Examples:
  # Start a nginx pod
  kubectl run nginx --image=nginx

  # Start a hazelcast pod and let the container expose port 5701
  kubectl run hazelcast --image=hazelcast/hazelcast --port=5701

  # Start a hazelcast pod and set environment variables "DNS_DOMAIN=cluster" and "POD_NAMESPACE=default" in the
container
  kubectl run hazelcast --image=hazelcast/hazelcast --env="DNS_DOMAIN=cluster" --env="POD_NAMESPACE=default"

  # Start a hazelcast pod and set labels "app=hazelcast" and "env=prod" in the container
  kubectl run hazelcast --image=hazelcast/hazelcast --labels="app=hazelcast,env=prod"

  # Dry run; print the corresponding API objects without creating them
  kubectl run nginx --image=nginx --dry-run=client

  # Start a nginx pod, but overload the spec with a partial set of values parsed from JSON
  kubectl run nginx --image=nginx --overrides='{ "apiVersion": "v1", "spec": { ... } }'

  # Start a busybox pod and keep it in the foreground, don't restart it if it exits
  kubectl run -i -t busybox --image=busybox --restart=Never

  # Start the nginx pod using the default command, but use custom arguments (arg1 .. argN) for that command
  kubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>

  # Start the nginx pod using a different command and custom arguments
  kubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>

Options:
    --allow-missing-template-keys=true:
        If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to
        golang and jsonpath output formats.

    --annotations=[]:
        Annotations to apply to the pod.

    --attach=false:
        If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.
        Default false, unless '-i/--stdin' is set, in which case the default is true. With '--restart=Never' the exit
        code of the container process is returned.

    --cascade='background':
        Must be "background", "orphan", or "foreground". Selects the deletion cascading strategy for the dependents
        (e.g. Pods created by a ReplicationController). Defaults to background.

    --command=false:
        If true and extra arguments are present, use them as the 'command' field in the container, rather than the
        'args' field which is the default.

    --dry-run='none':
        Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without
        sending it. If server strategy, submit server-side request without persisting the resource.

    --env=[]:
        Environment variables to set in the container.

    --expose=false:
        If true, create a ClusterIP service associated with the pod.  Requires `--port`.

    --field-manager='kubectl-run':
        Name of the manager used to track field ownership.

    -f, --filename=[]:
        to use to replace the resource.

    --force=false:
        If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of
        some resources may result in inconsistency or data loss and requires confirmation.

    --grace-period=-1:
        Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for
        immediate shutdown. Can only be set to 0 when --force is true (force deletion).

    --image='':
        The image for the container to run.

    --image-pull-policy='':
        The image pull policy for the container.  If left empty, this value will not be specified by the client and
        defaulted by the server.

    -k, --kustomize='':
        Process a kustomization directory. This flag can't be used together with -f or -R.

    -l, --labels='':
        Comma separated labels to apply to the pod. Will override previous values.

    --leave-stdin-open=false:
        If the pod is started in interactive mode or with stdin, leave stdin open after the first attach completes. By
        default, stdin will be closed after the first attach completes.

    -o, --output='':
        Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath,
        jsonpath-as-json, jsonpath-file).

    --override-type='merge':
        The method used to override the generated object: json, merge, or strategic.

    --overrides='':
        An inline JSON override for the generated object. If this is non-empty, it is used to override the generated
        object. Requires that the object supply a valid apiVersion field.

    --pod-running-timeout=1m0s:
        The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running

    --port='':
        The port that this container exposes.

    --privileged=false:
        If true, run the container in privileged mode.

    -q, --quiet=false:
        If true, suppress prompt messages.

    -R, --recursive=false:
        Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests
        organized within the same directory.

    --restart='Always':
        The restart policy for this Pod.  Legal values [Always, OnFailure, Never].

    --rm=false:
        If true, delete the pod after it exits.  Only valid when attaching to the container, e.g. with '--attach' or
        with '-i/--stdin'.

    --save-config=false:
        If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will
        be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.

    --show-managed-fields=false:
        If true, keep the managedFields when printing objects in JSON or YAML format.

    -i, --stdin=false:
        Keep stdin open on the container in the pod, even if nothing is attached.

    --template='':
        Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format
        is golang templates [http://golang.org/pkg/text/template/#pkg-overview].

    --timeout=0s:
        The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the
        object

    -t, --tty=false:
        Allocate a TTY for the container in the pod.

    --wait=false:
        If true, wait for resources to be gone before returning. This waits for finalizers.

Usage:
  kubectl run NAME --image=image [--env="key=value"] [--port=port] [--dry-run=server|client] [--overrides=inline-json]
[--command] -- [COMMAND] [args...] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl options
The following options can be passed to any command:

    --add-dir-header=false:
        If true, adds the file directory to the header of the log messages (DEPRECATED: will be removed in a future
        release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --alsologtostderr=false:
        log to standard error as well as files (no effect when -logtostderr=true) (DEPRECATED: will be removed in a
        future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --as='':
        Username to impersonate for the operation. User could be a regular user or a service account in a namespace.

    --as-group=[]:
        Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

    --as-uid='':
        UID to impersonate for the operation.

    --cache-dir='C:\Users\NB\.kube\cache':
        Default cache directory

    --certificate-authority='':
        Path to a cert file for the certificate authority

    --client-certificate='':
        Path to a client certificate file for TLS

    --client-key='':
        Path to a client key file for TLS

    --cluster='':
        The name of the kubeconfig cluster to use

    --context='':
        The name of the kubeconfig context to use

    --insecure-skip-tls-verify=false:
        If true, the server's certificate will not be checked for validity. This will make your HTTPS connections
        insecure

    --kubeconfig='':
        Path to the kubeconfig file to use for CLI requests.

    --log-backtrace-at=:0:
        when logging hits line file:N, emit a stack trace (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --log-dir='':
        If non-empty, write log files in this directory (no effect when -logtostderr=true) (DEPRECATED: will be
        removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --log-file='':
        If non-empty, use this log file (no effect when -logtostderr=true) (DEPRECATED: will be removed in a future
        release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --log-file-max-size=1800:
        Defines the maximum size a log file can grow to (no effect when -logtostderr=true). Unit is megabytes. If the
        value is 0, the maximum file size is unlimited. (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --log-flush-frequency=5s:
        Maximum number of seconds between log flushes

    --logtostderr=true:
        log to standard error instead of files (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --match-server-version=false:
        Require server version to match client version

    -n, --namespace='':
        If present, the namespace scope for this CLI request

    --one-output=false:
        If true, only write logs to their native severity level (vs also writing to each lower severity level; no
        effect when -logtostderr=true) (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --password='':
        Password for basic authentication to the API server

    --profile='none':
        Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)

    --profile-output='profile.pprof':
        Name of the file to write the profile to

    --request-timeout='0':
        The length of time to wait before giving up on a single server request. Non-zero values should contain a
        corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

    -s, --server='':
        The address and port of the Kubernetes API server

    --skip-headers=false:
        If true, avoid header prefixes in the log messages (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --skip-log-headers=false:
        If true, avoid headers when opening log files (no effect when -logtostderr=true) (DEPRECATED: will be removed
        in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --stderrthreshold=2:
        logs at or above this threshold go to stderr when writing to files and stderr (no effect when
        -logtostderr=true or -alsologtostderr=false) (DEPRECATED: will be removed in a future release, see
        https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/2845-deprecate-klog-specific-flags-in-k8s-components)

    --tls-server-name='':
        Server name to use for server certificate validation. If it is not provided, the hostname used to contact the
        server is used

    --token='':
        Bearer token for authentication to the API server

    --user='':
        The name of the kubeconfig user to use

    --username='':
        Username for basic authentication to the API server

    -v, --v=0:
        number for the log level verbosity

    --vmodule=:
        comma-separated list of pattern=N settings for file-filtered logging

    --warnings-as-errors=false:
        Treat warnings received from the server as errors and exit with a non-zero exit code

PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -A
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-5d78c9869d-p54nh           1/1     Running   0          66m
kube-system   etcd-minikube                      1/1     Running   0          66m
kube-system   kube-apiserver-minikube            1/1     Running   0          66m
kube-system   kube-controller-manager-minikube   1/1     Running   0          66m
kube-system   kube-proxy-m5n57                   1/1     Running   0          66m
kube-system   kube-scheduler-minikube            1/1     Running   0          66m
kube-system   storage-provisioner                1/1     Running   0          66m
ns1           nginx-pod                          1/1     Running   0          66s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -n ns1
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          3m41s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run nginx-pod-yaml --image nginx -n ns1 --dry-run=client -o=yaml














apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx-pod-yaml
  name: nginx-pod-yaml
  namespace: ns1
spec:
  containers:
  - image: nginx
    name: nginx-pod-yaml
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete namespace ns1
namespace "ns1" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -A
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-5d78c9869d-p54nh           1/1     Running   0          71m
kube-system   etcd-minikube                      1/1     Running   0          71m
kube-system   kube-apiserver-minikube            1/1     Running   0          71m
kube-system   kube-controller-manager-minikube   1/1     Running   0          71m
kube-system   kube-proxy-m5n57                   1/1     Running   0          71m
kube-system   kube-scheduler-minikube            1/1     Running   0          71m
kube-system   storage-provisioner                1/1     Running   0          71m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl create -f demo-files/1-appa-pod.yml
pod/appa-pod created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME       READY   STATUS              RESTARTS   AGE
appa-pod   0/1     ContainerCreating   0          13s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME       READY   STATUS              RESTARTS   AGE
appa-pod   0/1     ContainerCreating   0          38s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
appa-pod   1/1     Running   0          2m15s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe pod appa-pod
Name:             appa-pod
Namespace:        default
Priority:         0
Service Account:  default
Node:             minikube/172.25.180.252
Start Time:       Wed, 18 Oct 2023 13:48:56 +0300
Labels:           <none>
Annotations:      <none>
Status:           Running
IP:               10.244.0.5
IPs:
  IP:  10.244.0.5
Containers:
  appa-container:
    Container ID:   docker://251990a1d59a682b0a75c9f37cc63614a76f143fc6122abf26a1bf4f18d2c7cb
    Image:          shekeriev/k8s-appa:v1
    Image ID:       docker-pullable://shekeriev/k8s-appa@sha256:08a5b0a02e80016471dce29b666b8effb4f7d37e08103fe5c8e612d4f010dbc0
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 18 Oct 2023 13:49:52 +0300
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-hrqb9 (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-hrqb9:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  8m2s  default-scheduler  Successfully assigned default/appa-pod to minikube
  Normal  Pulling    8m1s  kubelet            Pulling image "shekeriev/k8s-appa:v1"
  Normal  Pulled     7m6s  kubelet            Successfully pulled image "shekeriev/k8s-appa:v1" in 54.587319754s (54.587345854s including waiting)
  Normal  Created    7m6s  kubelet            Created container appa-container
  Normal  Started    7m6s  kubelet            Started container appa-container
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl apply -f demo-files/2-appa-pod-ext.yml
Warning: resource pods/appa-pod is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
pod/appa-pod configured
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe pod appa-pod
Name:             appa-pod
Namespace:        default
Priority:         0
Service Account:  default
Node:             minikube/172.25.180.252
Start Time:       Wed, 18 Oct 2023 13:48:56 +0300
Labels:           app=appa
                  ver=v1
Annotations:      <none>
Status:           Running
IP:               10.244.0.5
IPs:
  IP:  10.244.0.5
Containers:
  appa-container:
    Container ID:   docker://251990a1d59a682b0a75c9f37cc63614a76f143fc6122abf26a1bf4f18d2c7cb
    Image:          shekeriev/k8s-appa:v1
    Image ID:       docker-pullable://shekeriev/k8s-appa@sha256:08a5b0a02e80016471dce29b666b8effb4f7d37e08103fe5c8e612d4f010dbc0
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 18 Oct 2023 13:49:52 +0300
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-hrqb9 (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-hrqb9:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  41m   default-scheduler  Successfully assigned default/appa-pod to minikube
  Normal  Pulling    40m   kubelet            Pulling image "shekeriev/k8s-appa:v1"
  Normal  Pulled     40m   kubelet            Successfully pulled image "shekeriev/k8s-appa:v1" in 54.587319754s (54.587345854s including waiting)
  Normal  Created    40m   kubelet            Created container appa-container
  Normal  Started    40m   kubelet            Started container appa-container
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> Compare-Object (Get-Content -Path demo-files/1-appa-pod.yml) -DifferenceObject (Get-Content -Path demo-files/1-appa-pod.yml)(Get-Content -Path demo-files/2-appa-pod-ext.yml)
Compare-Object : A positional parameter cannot be found that accepts argument 'System.Object[]'.
At line:1 char:1
+ Compare-Object (Get-Content -Path demo-files/1-appa-pod.yml) -Differe ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
                                              >                                                                                         PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> Compare-Object (Get-Content -Path demo-files/1-appa-pod.yml) -DifferenceObject (Get-Content -Path demo-files/1-appa-pod.yml)(Get-Content -Path demo-files/2-appa-pod-ext.yml) -IncludeEqual
Compare-Object : A positional parameter cannot be found that accepts argument 'System.Object[]'.
At line:1 char:1
+ Compare-Object (Get-Content -Path demo-files/1-appa-pod.yml) -Differe ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> Compare-Object (Get-Content -Path demo-files/1-appa-pod.yml) -DifferenceObject (Get-Content -Path demo-files/2-appa-pod-ext.yml) -IncludeEqual

InputObject                      SideIndicator
-----------                      -------------
apiVersion: v1                   ==
kind: Pod                        ==
metadata:                        ==
  name: appa-pod                 ==
spec:                            ==
  containers:                    ==
  - name: appa-container         ==
    image: shekeriev/k8s-appa:v1 ==
    ports:                       ==
    - containerPort: 80          ==
  labels:                        =>
    app: appa                    =>
    ver: v1                      =>

                                              >                                                                                         PS C:\Users\NB\Kubernetes\02. Core Concepts\m1>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run nginx-1 --image=nginx --labels="image=nginx,ver=v1" --annotations="created-by=user1"
pod/nginx-1 created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run nginx-2 --image=nginx --labels="image=nginx,ver=v2" --annotations="created-by=user1"
pod/nginx-2 created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
appa-pod   1/1     Running   0          45m
nginx-1    1/1     Running   0          31s
nginx-2    1/1     Running   0          20s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -o wide
NAME       READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
appa-pod   1/1     Running   0          46m   10.244.0.5   minikube   <none>           <none>
nginx-1    1/1     Running   0          63s   10.244.0.6   minikube   <none>           <none>
nginx-2    1/1     Running   0          52s   10.244.0.7   minikube   <none>           <none>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods --show-labels
NAME       READY   STATUS    RESTARTS   AGE   LABELS
appa-pod   1/1     Running   0          46m   app=appa,ver=v1
nginx-1    1/1     Running   0          93s   image=nginx,ver=v1
nginx-2    1/1     Running   0          82s   image=nginx,ver=v2
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -L image,ver
NAME       READY   STATUS    RESTARTS   AGE    IMAGE   VER
appa-pod   1/1     Running   0          47m            v1
nginx-1    1/1     Running   0          2m4s   nginx   v1
nginx-2    1/1     Running   0          113s   nginx   v2
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -l ver=v1
NAME       READY   STATUS    RESTARTS   AGE
appa-pod   1/1     Running   0          47m
nginx-1    1/1     Running   0          2m32s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -l image=nginx
NAME      READY   STATUS    RESTARTS   AGE
nginx-1   1/1     Running   0          2m47s
nginx-2   1/1     Running   0          2m36s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe pod nginx-1
Name:             nginx-1
Namespace:        default
Priority:         0
Service Account:  default
Node:             minikube/172.25.180.252
Start Time:       Wed, 18 Oct 2023 14:34:21 +0300
Labels:           image=nginx
                  ver=v1
Annotations:      created-by: user1
Status:           Running
IP:               10.244.0.6
IPs:
  IP:  10.244.0.6
Containers:
  nginx-1:
    Container ID:   docker://390c1c4f80b506ee53a13d08a5a3feb9faad9d12f72cc805a7899c3b0db18dad
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:b4af4f8b6470febf45dc10f564551af682a802eda1743055a7dfc8332dffa595
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Wed, 18 Oct 2023 14:34:24 +0300
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5zxzb (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-5zxzb:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  8m40s  default-scheduler  Successfully assigned default/nginx-1 to minikube
  Normal  Pulling    8m39s  kubelet            Pulling image "nginx"
  Normal  Pulled     8m37s  kubelet            Successfully pulled image "nginx" in 1.919540826s (1.919546726s including waiting)
  Normal  Created    8m37s  kubelet            Created container nginx-1
  Normal  Started    8m37s  kubelet            Started container nginx-1
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl label --overwrite pods nginx-2 ver=v1
pod/nginx-2 labeled
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods --show-labels
NAME       READY   STATUS    RESTARTS   AGE     LABELS
appa-pod   1/1     Running   0          50m     app=appa,ver=v1
nginx-1    1/1     Running   0          4m43s   image=nginx,ver=v1
nginx-2    1/1     Running   0          4m32s   image=nginx,ver=v1
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods -L app,image,ver
NAME       READY   STATUS    RESTARTS   AGE     APP    IMAGE   VER
appa-pod   1/1     Running   0          51m     appa           v1
nginx-1    1/1     Running   0          6m11s          nginx   v1
nginx-2    1/1     Running   0          6m             nginx   v1
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete pods -l image=nginx
pod "nginx-1" deleted
pod "nginx-2" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
appa-pod   1/1     Running   0          54m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl expose pod appa-pod --name=appa-svc --target-port=80 --type=NodePort
service/appa-svc exposed
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get svc appa-svc
NAME       TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
appa-svc   NodePort   10.98.237.144   <none>        80:31846/TCP   23s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe svc appa-svc
Name:                     appa-svc
Namespace:                default
Labels:                   app=appa
                          ver=v1
Annotations:              <none>
Selector:                 app=appa,ver=v1
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.98.237.144
IPs:                      10.98.237.144
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  31846/TCP
Endpoints:                10.244.0.5:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> minikube service list
|-------------|------------|--------------|-----------------------------|
|  NAMESPACE  |    NAME    | TARGET PORT  |             URL             |
|-------------|------------|--------------|-----------------------------|
| default     | appa-svc   |           80 | http://172.25.180.252:31846 |
| default     | kubernetes | No node port |                             |
| kube-system | kube-dns   | No node port |                             |
|-------------|------------|--------------|-----------------------------|
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete svc appa-svc
service "appa-svc" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get svc
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   134m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pod
NAME       READY   STATUS    RESTARTS   AGE
appa-pod   1/1     Running   0          60m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl apply -f demo-files/3-appa-svc.yml
service/appa-svc created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get svc
NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
appa-svc     NodePort    10.104.23.154   <none>        80:30001/TCP   15s
kubernetes   ClusterIP   10.96.0.1       <none>        443/TCP        137m
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe svc appa-svc
Name:                     appa-svc
Namespace:                default
Labels:                   app=appa
                          ver=v1
Annotations:              <none>
Selector:                 app=appa,ver=v1
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.104.23.154
IPs:                      10.104.23.154
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  30001/TCP
Endpoints:                10.244.0.5:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl run appa-pod-1 --image=shekeriev/k8s-appa:v1 --labels="app=appa,ver=v1"
pod/appa-pod-1 created
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe svc appa-svc
Name:                     appa-svc
Namespace:                default
Labels:                   app=appa
                          ver=v1
Annotations:              <none>
Selector:                 app=appa,ver=v1
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.104.23.154
IPs:                      10.104.23.154
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  30001/TCP
Endpoints:                10.244.0.5:80,10.244.0.8:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> minikube service list
|-------------|------------|--------------|-----------------------------|
|  NAMESPACE  |    NAME    | TARGET PORT  |             URL             |
|-------------|------------|--------------|-----------------------------|
| default     | appa-svc   |           80 | http://172.25.180.252:30001 |
| default     | kubernetes | No node port |                             |
| kube-system | kube-dns   | No node port |                             |
|-------------|------------|--------------|-----------------------------|
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl get pod
NAME         READY   STATUS    RESTARTS   AGE
appa-pod     1/1     Running   0          66m
appa-pod-1   1/1     Running   0          73s
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete pod appa-pod
pod "appa-pod" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl delete pod appa-pod-1
pod "appa-pod-1" deleted
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1> kubectl describe svc appa-svc
Name:                     appa-svc
Namespace:                default
Labels:                   app=appa
                          ver=v1
Annotations:              <none>
Selector:                 app=appa,ver=v1
Type:                     NodePort
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.104.23.154
IPs:                      10.104.23.154
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  30001/TCP
Endpoints:                <none>
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>
PS C:\Users\NB\Kubernetes\02. Core Concepts\m1>