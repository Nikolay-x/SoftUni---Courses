Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\WINDOWS\system32> cd..
PS C:\WINDOWS> cd..
PS C:\> cd C:\Users\NB\Kubernetes
PS C:\Users\NB\Kubernetes> minikube version
minikube version: v1.31.2
commit: fd7ecd9c4599bef9f04c0986c4a0187f98a4396e
PS C:\Users\NB\Kubernetes> minikube
minikube provisions and manages local Kubernetes clusters optimized for development workflows.

Basic Commands:
  start            Starts a local Kubernetes cluster
  status           Gets the status of a local Kubernetes cluster
  stop             Stops a running local Kubernetes cluster
  delete           Deletes a local Kubernetes cluster
  dashboard        Access the Kubernetes dashboard running within the minikube cluster
  pause            pause Kubernetes
  unpause          unpause Kubernetes

Images Commands:
  docker-env       Provides instructions to point your terminal's docker-cli to the Docker Engine inside minikube.
(Useful for building docker images directly inside minikube)
  podman-env       Configure environment to use minikube's Podman service
  cache            Manage cache for images
  image            Manage images

Configuration and Management Commands:
  addons           Enable or disable a minikube addon
  config           Modify persistent configuration values
  profile          Get or list the current profiles (clusters)
  update-context   Update kubeconfig in case of an IP or port change

Networking and Connectivity Commands:
  service          Returns a URL to connect to a service
  tunnel           Connect to LoadBalancer services

Advanced Commands:
  mount            Mounts the specified directory into minikube
  ssh              Log into the minikube environment (for debugging)
  kubectl          Run a kubectl binary matching the cluster version
  node             Add, remove, or list additional nodes
  cp               Copy the specified file into minikube

Troubleshooting Commands:
  ssh-key          Retrieve the ssh identity key path of the specified node
  ssh-host         Retrieve the ssh host key of the specified node
  ip               Retrieves the IP address of the specified node
  logs             Returns logs to debug a local Kubernetes cluster
  update-check     Print current and latest version number
  version          Print the version of minikube
  options          Show a list of global command-line options (applies to all commands).

Other Commands:
  completion       Generate command completion for a shell
  license          Outputs the licenses of dependencies to a directory

Use "minikube <command> --help" for more information about a given command.
PS C:\Users\NB\Kubernetes> minikube status
* Profile "minikube" not found. Run "minikube profile list" to view all profiles.
  To start a cluster, run: "minikube start"
PS C:\Users\NB\Kubernetes> minikube start --dry-run=true
* minikube v1.31.2 on Microsoft Windows 10 Home 10.0.19045.3448 Build 19045.3448
* Automatically selected the hyperv driver
* dry-run validation complete!
PS C:\Users\NB\Kubernetes> minikube start --help
Starts a local Kubernetes cluster

Options:
    --addons=[]:
        Enable addons. see `minikube addons list` for a list of valid addon names.

    --apiserver-ips=[]:
        A set of apiserver IP Addresses which are used in the generated certificate for kubernetes.  This can be used
        if you want to make the apiserver available from outside the machine

    --apiserver-name='minikubeCA':
        The authoritative apiserver hostname for apiserver certificates and connectivity. This can be used if you want
        to make the apiserver available from outside the machine

    --apiserver-names=[]:
        A set of apiserver names which are used in the generated certificate for kubernetes.  This can be used if you
        want to make the apiserver available from outside the machine

    --apiserver-port=8443:
        The apiserver listening port

    --auto-update-drivers=true:
        If set, automatically updates drivers to the latest version. Defaults to true.


--base-image='gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631':
        The base image to use for docker/podman drivers. Intended for local development.

    --binary-mirror='':
        Location to fetch kubectl, kubelet, & kubeadm binaries from.

    --cache-images=true:
        If true, cache docker images for the current bootstrapper and load them into the machine. Always false with
        --driver=none.

    --cert-expiration=26280h0m0s:
        Duration until minikube certificate expiration, defaults to three years (26280h).

    --cni='':
        CNI plug-in to use. Valid options: auto, bridge, calico, cilium, flannel, kindnet, or path to a CNI manifest
        (default: auto)

    --container-runtime='':
        The container runtime to be used. Valid options: docker, cri-o, containerd (default: auto)

    --cpus='2':
        Number of CPUs allocated to Kubernetes. Use "max" to use the maximum number of CPUs.

    --cri-socket='':
        The cri socket path to be used.

    --delete-on-failure=false:
        If set, delete the current cluster if start fails and try again. Defaults to false.

    --disable-driver-mounts=false:
        Disables the filesystem mounts provided by the hypervisors

    --disable-metrics=false:
        If set, disables metrics reporting (CPU and memory usage), this can improve CPU usage. Defaults to false.

    --disable-optimizations=false:
        If set, disables optimizations that are set for local Kubernetes. Including decreasing CoreDNS replicas from 2
        to 1. Defaults to false.

    --disk-size='20000mb':
        Disk size allocated to the minikube VM (format: <number>[<unit>], where unit = b, k, m or g).

    --dns-domain='cluster.local':
        The cluster dns domain name used in the Kubernetes cluster

    --dns-proxy=false:
        Enable proxy for NAT DNS requests (virtualbox driver only)

    --docker-env=[]:
        Environment variables to pass to the Docker daemon. (format: key=value)

    --docker-opt=[]:
        Specify arbitrary flags to pass to the Docker daemon. (format: key=value)

    --download-only=false:
        If true, only download and cache files for later use - don't install or start anything.

    --driver='':
        Driver is one of: virtualbox, hyperv, vmware, qemu2 (experimental), docker, podman (experimental), ssh
        (defaults to auto-detect)

    --dry-run=false:
        dry-run mode. Validates configuration, but does not mutate system state

    --embed-certs=false:
        if true, will embed the certs in kubeconfig.

    --enable-default-cni=false:
        DEPRECATED: Replaced by --cni=bridge

    --extra-config=:
        A set of key=value pairs that describe configuration that may be passed to different components.               The key
        should be '.' separated, and the first part before the dot is the component to apply the configuration to.
        Valid components are: kubelet, kubeadm, apiserver, controller-manager, etcd, proxy, scheduler           Valid kubeadm
        parameters: ignore-preflight-errors, dry-run, kubeconfig, kubeconfig-dir, node-name, cri-socket,
        experimental-upload-certs, certificate-key, rootfs, skip-phases, pod-network-cidr

    --extra-disks=0:
        Number of extra disks created and attached to the minikube VM (currently only implemented for hyperkit, kvm2,
        and qemu2 drivers)

    --feature-gates='':
        A set of key=value pairs that describe feature gates for alpha/experimental features.

    --force=false:
        Force minikube to perform possibly dangerous operations

    --force-systemd=false:
        If set, force the container runtime to use systemd as cgroup manager. Defaults to false.

    --host-dns-resolver=true:
        Enable host resolver for NAT DNS requests (virtualbox driver only)

    --host-only-cidr='192.168.59.1/24':
        The CIDR to be used for the minikube VM (virtualbox driver only)

    --host-only-nic-type='virtio':
        NIC Type used for host only network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio
        (virtualbox driver only)

    --hyperkit-vpnkit-sock='':
        Location of the VPNKit socket used for networking. If empty, disables Hyperkit VPNKitSock, if 'auto' uses
        Docker for Mac VPNKit connection, otherwise uses the specified VSock (hyperkit driver only)

    --hyperkit-vsock-ports=[]:
        List of guest VSock ports that should be exposed as sockets on the host (hyperkit driver only)

    --hyperv-external-adapter='':
        External Adapter on which external switch will be created if no external switch is found. (hyperv driver only)

    --hyperv-use-external-switch=false:
        Whether to use external switch over Default Switch if virtual switch not explicitly specified. (hyperv driver
        only)

    --hyperv-virtual-switch='':
        The hyperv virtual switch name. Defaults to first found. (hyperv driver only)

    --image-mirror-country='':
        Country code of the image mirror to be used. Leave empty to use the global one. For Chinese mainland users,
        set it to cn.

    --image-repository='':
        Alternative image repository to pull docker images from. This can be used when you have limited access to
        gcr.io. Set it to "auto" to let minikube decide one for you. For Chinese mainland users, you may use local
        gcr.io mirrors such as registry.cn-hangzhou.aliyuncs.com/google_containers

    --insecure-registry=[]:
        Insecure Docker registries to pass to the Docker daemon.  The default service CIDR range will automatically be
        added.

    --install-addons=true:
        If set, install addons. Defaults to true.

    --interactive=true:
        Allow user prompts for more information


--iso-url=[https://storage.googleapis.com/minikube-builds/iso/16971/minikube-v1.31.0-amd64.iso,https://github.com/kubernetes/minikube/releases/download/v1.31.0/minikube-v1.31.0-amd64.iso,https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/iso/minikube-v1.31.0-amd64.iso]:
        Locations to fetch the minikube ISO from.

    --keep-context=false:
        This will keep the existing kubectl context and will create a minikube context.

    --kubernetes-version='':
        The Kubernetes version that the minikube VM will use (ex: v1.2.3, 'stable' for v1.27.4, 'latest' for
        v1.28.0-rc.1). Defaults to 'stable'.

    --kvm-gpu=false:
        Enable experimental NVIDIA GPU support in minikube

    --kvm-hidden=false:
        Hide the hypervisor signature from the guest in minikube (kvm2 driver only)

    --kvm-network='default':
        The KVM default network name. (kvm2 driver only)

    --kvm-numa-count=1:
        Simulate numa node count in minikube, supported numa node count range is 1-8 (kvm2 driver only)

    --kvm-qemu-uri='qemu:///system':
        The KVM QEMU connection URI. (kvm2 driver only)

    --listen-address='':
        IP Address to use to expose ports (docker and podman driver only)

    --memory='':
        Amount of RAM to allocate to Kubernetes (format: <number>[<unit>], where unit = b, k, m or g). Use "max" to
        use the maximum amount of memory.

    --mount=false:
        This will start the mount daemon and automatically mount files into minikube.

    --mount-9p-version='9p2000.L':
        Specify the 9p version that the mount should use

    --mount-gid='docker':
        Default group id used for the mount

    --mount-ip='':
        Specify the ip that the mount should be setup on

    --mount-msize=262144:
        The number of bytes to use for 9p packet payload

    --mount-options=[]:
        Additional mount options, such as cache=fscache

    --mount-port=0:
        Specify the port that the mount should be setup on, where 0 means any free port.

    --mount-string='C:\Users\NB:/minikube-host':
        The argument to pass the minikube mount command on start.

    --mount-type='9p':
        Specify the mount filesystem type (supported types: 9p)

    --mount-uid='docker':
        Default user id used for the mount

    --namespace='default':
        The named space to activate after start

    --nat-nic-type='virtio':
        NIC Type used for nat network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio (virtualbox
        driver only)

    --native-ssh=true:
        Use native Golang SSH client (default true). Set to 'false' to use the command line 'ssh' command when
        accessing the docker machine. Useful for the machine drivers when they will not start with 'Waiting for SSH'.

    --network='':
        network to run minikube with. Now it is used by docker/podman and KVM drivers. If left empty, minikube will
        create a new network.

    --network-plugin='':
        DEPRECATED: Replaced by --cni

    --nfs-share=[]:
        Local folders to share with Guest via NFS mounts (hyperkit driver only)

    --nfs-shares-root='/nfsshares':
        Where to root the NFS Shares, defaults to /nfsshares (hyperkit driver only)

    --no-kubernetes=false:
        If set, minikube VM/container will start without starting or configuring Kubernetes. (only works on new
        clusters)

    --no-vtx-check=false:
        Disable checking for the availability of hardware virtualization before the vm is started (virtualbox driver
        only)

    -n, --nodes=1:
        The number of nodes to spin up. Defaults to 1.

    -o, --output='text':
        Format to print stdout in. Options include: [text,json]

    --ports=[]:
        List of ports that should be exposed (docker and podman driver only)

    --preload=true:
        If set, download tarball of preloaded images if available to improve start time. Defaults to true.

    --qemu-firmware-path='':
        Path to the qemu firmware file. Defaults: For Linux, the default firmware location. For macOS, the brew
        installation location. For Windows, C:\Program Files\qemu\share

    --registry-mirror=[]:
        Registry mirrors to pass to the Docker daemon

    --service-cluster-ip-range='10.96.0.0/12':
        The CIDR to be used for service cluster IPs.

    --socket-vmnet-client-path='':
        Path to the socket vmnet client binary (QEMU driver only)

    --socket-vmnet-path='':
        Path to socket vmnet binary (QEMU driver only)

    --ssh-ip-address='':
        IP address (ssh driver only)

    --ssh-key='':
        SSH key (ssh driver only)

    --ssh-port=22:
        SSH port (ssh driver only)

    --ssh-user='root':
        SSH user (ssh driver only)

    --static-ip='':
        Set a static IP for the minikube cluster, the IP must be: private, IPv4, and the last octet must be between 2
        and 254, for example 192.168.200.200 (Docker and Podman drivers only)

    --subnet='':
        Subnet to be used on kic cluster. If left empty, minikube will choose subnet address, beginning from
        192.168.49.0. (docker and podman driver only)

    --trace='':
        Send trace events. Options include: [gcp]

    --uuid='':
        Provide VM UUID to restore MAC address (hyperkit driver only)
                                                                                                                            --vm=false:                                                                                                                 Filter to use only VM Drivers                                                                                                                                                                                                               --vm-driver='':                                                                                                             DEPRECATED, use `driver` instead.

    --wait=[apiserver,system_pods]:
        comma separated list of Kubernetes components to verify and wait for after starting a cluster. defaults to
        "apiserver,system_pods", available options: "apiserver,system_pods,default_sa,apps_running,node_ready,kubelet"
        . other acceptable values are 'all' or 'none', 'true' and 'false'

    --wait-timeout=6m0s:
        max time to wait per Kubernetes or host to be healthy.

Usage:
  minikube start [flags] [options]

Use "minikube options" for a list of global command-line options (applies to all commands).
PS C:\Users\NB\Kubernetes> minikube status
* Profile "minikube" not found. Run "minikube profile list" to view all profiles.
  To start a cluster, run: "minikube start"
PS C:\Users\NB\Kubernetes> minikube start
* minikube v1.31.2 on Microsoft Windows 10 Home 10.0.19045.3448 Build 19045.3448
* Automatically selected the hyperv driver
* Starting control plane node minikube in cluster minikube
* Creating hyperv VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...
* Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
  - Generating certificates and keys ...
  - Booting up control plane ...
  - Configuring RBAC rules ...
* Configuring bridge CNI (Container Networking Interface) ...
* Verifying Kubernetes components...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Enabled addons: storage-provisioner, default-storageclass

! C:\Program Files\Docker\Docker\resources\bin\kubectl.exe is version 1.25.9, which may have incompatibilities with Kubernetes 1.27.4.
  - Want kubectl v1.27.4? Try 'minikube kubectl -- get pods -A'
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
PS C:\Users\NB\Kubernetes> minikube status
minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

PS C:\Users\NB\Kubernetes> cd '.\Core Concepts\'
PS C:\Users\NB\Kubernetes\Core Concepts> minikube ssh
                         _             _
            _         _ ( )           ( )
  ___ ___  (_)  ___  (_)| |/')  _   _ | |_      __
/' _ ` _ `\| |/' _ `\| || , <  ( ) ( )| '_`\  /'__`\
| ( ) ( ) || || ( ) || || |\`\ | (_) || |_) )(  ___/
(_) (_) (_)(_)(_) (_)(_)(_) (_)`\___/'(_,__/'`\____)

$ id
uid=1000(docker) gid=1000(docker) groups=1000(docker),10(wheel),1013(podman),1014(buildkit),1017(vboxsf)
$ docker version
Client:
 Version:           24.0.4
 API version:       1.43
 Go version:        go1.20.5
 Git commit:        3713ee1
 Built:             Fri Jul  7 14:49:50 2023
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          24.0.4
  API version:      1.43 (minimum version 1.12)
  Go version:       go1.20.5
  Git commit:       4ffc614
  Built:            Fri Jul  7 14:51:12 2023
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          v1.7.2
  GitCommit:        0cae528dd6cb557f7201036e9f43420650207b58
 runc:
  Version:          1.1.7
  GitCommit:        860f061b76bb4fc671f0f9e900f7d80ff93d4eb7
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
$ docker image ls
REPOSITORY                                TAG       IMAGE ID       CREATED         SIZE
registry.k8s.io/kube-apiserver            v1.27.4   e7972205b661   3 months ago    121MB
registry.k8s.io/kube-controller-manager   v1.27.4   f466468864b7   3 months ago    113MB
registry.k8s.io/kube-proxy                v1.27.4   6848d7eda034   3 months ago    71.1MB
registry.k8s.io/kube-scheduler            v1.27.4   98ef2570f3cd   3 months ago    58.4MB
registry.k8s.io/coredns/coredns           v1.10.1   ead0a4a53df8   8 months ago    53.6MB
registry.k8s.io/etcd                      3.5.7-0   86b6af7dd652   8 months ago    296MB
registry.k8s.io/pause                     3.9       e6f181688397   12 months ago   744kB
gcr.io/k8s-minikube/storage-provisioner   v5        6e38f40d628d   2 years ago     31.5MB
$ docker container ls
CONTAINER ID   IMAGE                       COMMAND                  CREATED         STATUS         PORTS     NAMES
b8913017bd6e   6e38f40d628d                "/storage-provisioner"   2 minutes ago   Up 2 minutes             k8s_storage-provisioner_storage-provisioner_kube-system_f90a395e-e2e6-4be9-928b-b51e047ac3de_0
315853322a82   ead0a4a53df8                "/coredns -conf /etc…"   2 minutes ago   Up 2 minutes             k8s_coredns_coredns-5d78c9869d-p54nh_kube-system_5edf180a-f4ab-4e45-918d-81799a8ecc3b_0
2ebb13d4ed48   6848d7eda034                "/usr/local/bin/kube…"   2 minutes ago   Up 2 minutes             k8s_kube-proxy_kube-proxy-m5n57_kube-system_585fdda6-0278-4df8-9afb-8173d4ffe365_0
b7d17e91134a   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_storage-provisioner_kube-system_f90a395e-e2e6-4be9-928b-b51e047ac3de_0
8130e99289e9   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_kube-proxy-m5n57_kube-system_585fdda6-0278-4df8-9afb-8173d4ffe365_0
e5e616dcfc13   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_coredns-5d78c9869d-p54nh_kube-system_5edf180a-f4ab-4e45-918d-81799a8ecc3b_0
51fa2bab8ba7   86b6af7dd652                "etcd --advertise-cl…"   2 minutes ago   Up 2 minutes             k8s_etcd_etcd-minikube_kube-system_8264f8ffd4727ff8afd37e172b02512b_0
821a946aa3ed   f466468864b7                "kube-controller-man…"   2 minutes ago   Up 2 minutes             k8s_kube-controller-manager_kube-controller-manager-minikube_kube-system_ee9c695ad9ff256c3f892f7e252e24d8_0
954095ba21e1   98ef2570f3cd                "kube-scheduler --au…"   2 minutes ago   Up 2 minutes             k8s_kube-scheduler_kube-scheduler-minikube_kube-system_eb675835e10503c79265cf0e2983f93c_0
d7b5ec102958   e7972205b661                "kube-apiserver --ad…"   2 minutes ago   Up 2 minutes             k8s_kube-apiserver_kube-apiserver-minikube_kube-system_9652c6a05d5a33f399a99f35adc987c4_0
ca01f826c56a   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_kube-controller-manager-minikube_kube-system_ee9c695ad9ff256c3f892f7e252e24d8_0
d62b2f603f85   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_kube-scheduler-minikube_kube-system_eb675835e10503c79265cf0e2983f93c_0
16a1b138785e   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_kube-apiserver-minikube_kube-system_9652c6a05d5a33f399a99f35adc987c4_0
70821ecd871a   registry.k8s.io/pause:3.9   "/pause"                 2 minutes ago   Up 2 minutes             k8s_POD_etcd-minikube_kube-system_8264f8ffd4727ff8afd37e172b02512b_0
$ exit
logout
PS C:\Users\NB\Kubernetes\Core Concepts> Get-History

  Id CommandLine
  -- -----------
   1 cd..
   2 cd..
   3 cd C:\Users\NB\Kubernetes
   4 minikube version
   5 minikube
   6 minikube status
   7 minikube start --dry-run=true
   8 minikube start --help
   9 minikube status
  10 minikube start
  11 minikube status
  12 cd '.\Core Concepts\'
  13 minikube ssh


PS C:\Users\NB\Kubernetes\Core Concepts> kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/

Basic Commands (Beginner):
  create          Create a resource from a file or from stdin
  expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service
  run             Run a particular image on the cluster
  set             Set specific features on objects

Basic Commands (Intermediate):
  explain         Get documentation for a resource
  get             Display one or many resources
  edit            Edit a resource on the server
  delete          Delete resources by file names, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout         Manage the rollout of a resource
  scale           Set a new size for a deployment, replica set, or replication controller
  autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller

Cluster Management Commands:
  certificate     Modify certificate resources.
  cluster-info    Display cluster information
  top             Display resource (CPU/memory) usage
  cordon          Mark node as unschedulable
  uncordon        Mark node as schedulable
  drain           Drain node in preparation for maintenance
  taint           Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe        Show details of a specific resource or group of resources
  logs            Print the logs for a container in a pod
  attach          Attach to a running container
  exec            Execute a command in a container
  port-forward    Forward one or more local ports to a pod
  proxy           Run a proxy to the Kubernetes API server
  cp              Copy files and directories to and from containers
  auth            Inspect authorization
  debug           Create debugging sessions for troubleshooting workloads and nodes

Advanced Commands:
  diff            Diff the live version against a would-be applied version
  apply           Apply a configuration to a resource by file name or stdin
  patch           Update fields of a resource
  replace         Replace a resource by file name or stdin
  wait            Experimental: Wait for a specific condition on one or many resources
  kustomize       Build a kustomization target from a directory or URL.

Settings Commands:
  label           Update the labels on a resource
  annotate        Update the annotations on a resource
  completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)

Other Commands:
  alpha           Commands for features in alpha
  api-resources   Print the supported API resources on the server
  api-versions    Print the supported API versions on the server, in the form of "group/version"
  config          Modify kubeconfig files
  plugin          Provides utilities for interacting with plugins
  version         Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl version --client
WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.
Client Version: version.Info{Major:"1", Minor:"25", GitVersion:"v1.25.9", GitCommit:"a1a87a0a2bcd605820920c6b0e618a8ab7d117d4", GitTreeState:"clean", BuildDate:"2023-04-12T12:16:51Z", GoVersion:"go1.19.8", Compiler:"gc", Platform:"windows/amd64"}
Kustomize Version: v4.5.7
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl cluster-info
Kubernetes control plane is running at https://172.25.180.252:8443
CoreDNS is running at https://172.25.180.252:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl get nodes
NAME       STATUS   ROLES           AGE   VERSION
minikube   Ready    control-plane   16m   v1.27.4
PS C:\Users\NB\Kubernetes\Core Concepts> kubectl get nodes -o wide
NAME       STATUS   ROLES           AGE   VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE               KERNEL-VERSION   CONTAINER-RUNTIME
minikube   Ready    control-plane   16m   v1.27.4   172.25.180.252   <none>        Buildroot 2021.02.12   5.10.57          docker://24.0.4
PS C:\Users\NB\Kubernetes\Core Concepts>