Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\Users\NB> cd .\Kubernetes\
PS C:\Users\NB\Kubernetes> vagrant ssh node1
Linux node1 5.10.0-26-amd64 #1 SMP Debian 5.10.197-1 (2023-09-29) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Wed Nov 22 08:09:46 2023 from 10.0.2.2
vagrant@node1:~$ cat > scenario-2.yaml
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: readiness-http
  name: readiness-http
spec:
  initContainers:
  - name: init-data
    image: alpine
    command: ["/bin/sh", "-c"]
    args:
      - echo '(Almost) Always Ready to Serve ;)' > /data/index.html
    volumeMounts:
    - name: data
      mountPath: /data
  containers:
  - name: cont-main
    image: nginx
    volumeMounts:
    - name: data
      mountPath: /usr/share/nginx/html
    readinessProbe:
      httpGet:
        path: /healthy.html
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
  - name: cont-sidecar-postpone
    image: alpine
    command: ["/bin/sh", "-c"]
    args:
      - while true; do
          sleep 20;
          echo 'WORKING' > /check/healthy.html;
          sleep 60;
        done
    volumeMounts:
    - name: data
      mountPath: /check
  - name: cont-sidecar-break
    image: alpine
    command: ["/bin/sh", "-c"]
    args:
      - while true; do
          sleep 60;
          rm /check/healthy.html;
          sleep 20;
        done
    volumeMounts:
    - name: data
      mountPath: /check
  volumes:
  - name: data
    emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: readiness-http
  labels:
    app: readiness-http
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30001
    protocol: TCP
  selector:
    app: readiness-http
vagrant@node1:~$ kubectl apply -f scenario-2.yaml
pod/readiness-http created
service/readiness-http created
vagrant@node1:~$ kubectl get pods -o wide
NAME             READY   STATUS            RESTARTS   AGE   IP              NODE    NOMINATED NODE   READINESS GATES
readiness-http   0/3     PodInitializing   0          6s    10.244.104.12   node2   <none>           <none>
vagrant@node1:~$ kubectl get pods -o wide
NAME             READY   STATUS    RESTARTS   AGE   IP              NODE    NOMINATED NODE   READINESS GATES
readiness-http   3/3     Running   0          51s   10.244.104.12   node2   <none>           <none>
vagrant@node1:~$ kubectl get pods -o wide
NAME             READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES
readiness-http   2/3     Running   0          107s   10.244.104.12   node2   <none>           <none>
vagrant@node1:~$ kubectl get pods -o wide
NAME             READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES
readiness-http   3/3     Running   0          112s   10.244.104.12   node2   <none>           <none>
vagrant@node1:~$ kubectl get pods -o wide
NAME             READY   STATUS    RESTARTS   AGE    IP              NODE    NOMINATED NODE   READINESS GATES
readiness-http   3/3     Running   0          117s   10.244.104.12   node2   <none>           <none>
vagrant@node1:~$ kubectl delete -f scenario-2.yaml
pod "readiness-http" deleted
service "readiness-http" deleted
vagrant@node1:~$ history
  ...
  772  cat > scenario-2.yaml
  773  kubectl apply -f scenario-2.yaml
  774  kubectl get pods -o wide
  775  kubectl delete -f scenario-2.yaml
  776  history
vagrant@node1:~$ exit
logout
Connection to 127.0.0.1 closed.
PS C:\Users\NB\Kubernetes> Get-History

  Id CommandLine
  -- -----------
   1 cd .\Kubernetes\
   2 vagrant ssh node1


PS C:\Users\NB\Kubernetes>